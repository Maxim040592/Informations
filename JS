***Переменные
  # обьявление переменных - var,let,const
   - В случае повторного переопределения переменой через var ошибки не будет, переменная просто переопределится
   - Лучше использовать let т.к в случае обьявления переменной которая уже имеется js выдаст ошибку об этом (let name = 'Mike';)
   - Переменную const нельзя переопределить но можно переопределить обект переменной:
      const nameMike = { name: 'Mike', age: 40};
      nameMike.name = 'Jon' - в таком случае ошибки не будет
      nameMike = 'Jon' - будет ошибка
      
   # Преобразование типов
    let valut;
    //number to string
      value = string(10);
      value = (10).to.string();
    //boolean to string
      value = string(true);
    //Array to str
      value = string([1,2,3]);
    //Object to str
      value = string({name: 'Mike'});
    //Str to Number
      value = Number('2');
    //Boolena to Number
      value = Number(true); - 1
      value = Number(false); - 0
      value = Number('false');- NaN
      value = Number('false'); - NaN
     //parseInt
      value = parseInt('200px'); - 200
     //parseFloat
      vallue = parseFloat('200.300px); - 200.300
     //Boolean
      value = Boolean('hello'); - true
      value = Boolean(''); - false
      value = Boolean(' '); - true
      value = Boolean(100); - true
      value = Boolean([]); - true
      
   # Числа
    - бибблиотека Math
    value = Math.random();
    value = Math.round(2.4); округление
    value = Math.ceil(2.1); округление в большую сторону - 3
    value = Math.floor(2.9); округление в меньшую сторону - 2
    value = Math.min(2,12,3); min
    
  # Строки
    const firstName = 'Denis';
    const lasName = 'Ptrov';
    const age = 30;
    const str = 'Hi my name is Denis';
    
    let value;
    
    value = firstName.length; - длина строки
    value = firstName.toUpperCase(); - перевод в верхний регистр
    value = firstName.concat(' ', lastName); - конкатенация строки
    value = str.indexof('n'); - вернет первое вхождение индекса в строке
    value = str.indexof('n', 10); - вернет первое вхождение индекса в строке на начиная с 10 позиции
    value = str.includes('Denis'); - true or false содержания значения в строке
    value = str.slice(0, 5); - вырезае символы с 0 позиции 5 символов 
    value = str.replice('Denis','Den'); - заменит Denis на Den
    
  # Шаблонные строки
    const firstName = 'Denis';
    const lastName = 'Ptrov';
    const age = 30;
    let str;
    str = `
      <ul>
        <li>FirstName: ${firstName}<\li>
        <li>LastName: ${lastName}<\li>
        <li>Age: ${age}<\li>
      </ul>
    `
  # Обьекты
    const user {
    firstName: 'Alex',
    'frend'{
    country: 'USA',
    age: 29
    },
    age: 30};
    
    -методы обращения
      let value;  
      value = user.firstName;
      value = user.['firstName'];
      value = user['frend']; - выведит массв вложенного обьекта frend
      value = user['frend'].age; - обращение к элементу вложенного обекта frend
      value = user['frend']['age']; - обращение к элементу вложенного обекта frend
      user['frend'].city = 'Mayami'; - так как поля city изначально не было обьявленно то таким способом оно создастся автоматом
      user['frend'].ulica.house = 25; - выдасть ошибку т.к ulica не был нигде не иницаилизирован
        user['frend'].ulica = {};
        user['frend'].ulica.house = 25; - в таком случае ошибки не будет
   
   # Условные операторы (<;>;<=;>=;!=;!== строгое сравнение; ==; === строгое сравнение; || кажде значение пытается преобразовать к true; && кажде значение пытается преобразовать к false)
     if 1 == '1' - true т.к неявное сравнение преобразует строку в число
     if 1 === '1' - false т.к явное сравнение говорит что цифра не равна строке
     if (Array.isArray(value)) - проверяет что массив это массив, где value это сам массив
     if (user.hasOwnProperty('name')) - проверит наличие свойства name в объекте user
     
     *определяем значение для переменной с помощью ||(или)
     servername = 'Den';
     nickname = servername || 'undefine servername'; - т.е присвоится значение Den так как знак || пытается привезти к true а servername у нас true (т.е не пустое значение)
     
     value = 1 && 0 && 2 - вернет 0 так как это false а опертор && стремится к первому false
   
   # Тернарный оператор.Switch case (Тернарный оператор исп чаще всего для присваоения переменной значения в зависимрсти от условия)
     //выражение ? если true : если false;
     обычное условие:
      if (a>0){ b = a; } else b += 1;
     применение тернарного оператора: мы в переменную b сразу присваиваем выражание условия
       b = a > 0 ? a : b + 1; т.е a > 0 ? a говорит о том что если a > 0 и это true то присваивай a; : b + 1 - иначе b + 1;
       
      switch (n) {
        case 'one': какой то код
        break;
        default: какой то код (выполняется если ни один case не выполнился)
      }
      
   # Циклы //while; do while; for; for of; for in;
      let i = 10;
      while(i--) {
        что то делаем (выполнится 10 раз и оставновится т.к i станет 0 а 0 это false)
      }
      
      *for in - для обьекта
       const user = {name: 'Alex', age: 20 };
       for (let key_is in user) {
        console.Log(key_is);
        console.Log(user[key_is]);
      *for of - для объекта
        for (let value of user) {
        console.Log(value);}
    
    # Функции
      1. function declaration - способо обявления
      function hello(firstName = 'Nik', age = 30){
       console.Log(user[key_is]);
       return `Hello ${firstName} ${age}
      }
      hello(); - функция вернет Nik 30 т.к не были переданы параметры а установлены в обявлении функции
      
      2. function extantion - способ обьявления
      const gg = function(x){
       return x * x;
       };
      
      3. Самовызывающаяся ф-я
        (function(msg) {
          console.log(msg);
         })(передаем тут параметр);
      
     # Базовые методы массиов
      - arr.length;
      - Array.isArray(arr); - являеися ли массив массивом
      - arr.indexOf(элемент массива); - вернет его индекс
      - arr.push(10); - добавит в конец массива 10 
      - arr.pop(); - удалит элемент с конца массива
      - arr.unshift(10); - добавит в начало массива
      - arr.shift(10); - удалит с начала массива
      - arr.slice(0, 2); - вырезает из массива массива
      - arr.splice(1, 2); - удалит из массива с 1 индекса 2 элемента
      - arr.reverse(); - переварачивает массив
      - arr.concat(arr); - конкатенация массива
      - arr.join() - сливет массив в строку
      'Hello'.split(" "); - разобьет строку на каждый символ и добавит в массив
      
      
    
    
   
   
   
      
      
    
    
    
    
    
      
    
   
